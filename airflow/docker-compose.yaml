x-airflow-common: &airflow-common
 image: apache/airflow:2.10.0
 environment: &airflow-common-env
   AIRFLOW__CORE__EXECUTOR: CeleryExecutor
   AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://jerome_laval:Motdepasse13$@postgres/olist_dw
   AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://jerome_laval:Motdepasse13$@postgres/olist_dw
   AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
   AIRFLOW__CORE__FERNET_KEY: ''
   AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
   AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
   AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
   AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
 volumes:
   - ./dags:/opt/airflow/dags
   - ./logs:/opt/airflow/logs
   - ./plugins:/opt/airflow/plugins
   - ./config:/opt/airflow/config
   - ../src:/opt/airflow/dags/src
   - ../data:/opt/airflow/dags/data
 user: "${AIRFLOW_UID:-50000}:0"
 depends_on: &airflow-common-depends-on
   redis:
     condition: service_healthy
   postgres:
     condition: service_healthy

services:
 postgres:
   image: postgres:13
   container_name: postgres
   environment:
     POSTGRES_USER: jerome_laval
     POSTGRES_PASSWORD: Motdepasse13$
     POSTGRES_DB: olist_dw
   volumes:
     - postgres_data:/var/lib/postgresql/data
   healthcheck:
     test: ["CMD", "pg_isready", "-U", "jerome_laval"]
     interval: 10s
     retries: 5
     start_period: 5s
   restart: always
   ports:
     - "5432:5432"
   command: 
     - "postgres"
     - "-c"
     - "listen_addresses=*"
     - "-c"
     - "log_statement=all"

 redis:
   image: redis:7.2-bookworm
   expose:
     - 6379
   healthcheck:
     test: ["CMD", "redis-cli", "ping"]
     interval: 10s
     timeout: 30s
     retries: 50
     start_period: 30s
   restart: always

 airflow-webserver:
   <<: *airflow-common
   command: webserver
   ports:
     - "8080:8080"
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
     interval: 30s
     timeout: 10s
     retries: 5
     start_period: 30s
   restart: always
   depends_on:
     <<: *airflow-common-depends-on
     airflow-init:
       condition: service_completed_successfully

 airflow-scheduler:
   <<: *airflow-common
   command: scheduler
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
     interval: 30s
     timeout: 10s
     retries: 5
     start_period: 30s
   restart: always
   depends_on:
     <<: *airflow-common-depends-on
     airflow-init:
       condition: service_completed_successfully

 airflow-worker:
   <<: *airflow-common
   command: celery worker
   healthcheck:
     test:
       - "CMD-SHELL"
       - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
     interval: 30s
     timeout: 10s
     retries: 5
     start_period: 30s
   restart: always
   depends_on:
     <<: *airflow-common-depends-on
     airflow-init:
       condition: service_completed_successfully

 airflow-triggerer:
   <<: *airflow-common
   command: triggerer
   healthcheck:
     test: ["CMD-SHELL", 'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"']
     interval: 30s
     timeout: 10s
     retries: 5
     start_period: 30s
   restart: always
   depends_on:
     <<: *airflow-common-depends-on
     airflow-init:
       condition: service_completed_successfully

 airflow-init:
   <<: *airflow-common
   command: version
   environment:
     <<: *airflow-common-env
     _AIRFLOW_DB_UPGRADE: 'true'
     _AIRFLOW_WWW_USER_CREATE: 'true'
     _AIRFLOW_WWW_USER_USERNAME: admin
     _AIRFLOW_WWW_USER_PASSWORD: admin
   user: "0:0"

 superset:
   image: apache/superset
   container_name: superset
   environment:
     SUPERSET_SECRET_KEY: "sauDfrnuC4eyh+hNwC8TaVVwHGOnYudRzQ+dFFaQYJ7Y1TNhMKGC4X23"
     POSTGRES_DB: olist_dw
     POSTGRES_USER: jerome_laval
     POSTGRES_PASSWORD: Motdepasse13$
     SQLALCHEMY_DATABASE_URI: postgresql://jerome_laval:Motdepasse13$@postgres:5432/olist_dw
     SUPERSET_FEATURE_EMBEDDED_SUPERSET: "true"
     SUPERSET_SQLALCHEMY_DATABASE_URI: sqlite:////app/superset_home/superset.db
     SUPERSET_POSTGRES_HOST: postgres
     SUPERSET_POSTGRES_PORT: 5432
     SUPERSET_POSTGRES_DB: olist_dw
     SUPERSET_POSTGRES_USER: jerome_laval
     SUPERSET_POSTGRES_PASSWORD: Motdepasse13$
   ports:
     - "8088:8088"
   volumes:
     - superset_home:/app/superset_home
   command: >
     bash -c "pip install psycopg2-binary &&
     superset fab create-admin --username admin --firstname admin --lastname admin --email admin@superset.com --password admin &&
     superset db upgrade &&
     superset init &&
     superset run -p 8088 --with-threads --reload --host=0.0.0.0"
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8088/health"]
     interval: 10s
     timeout: 10s
     retries: 5
   restart: always
   depends_on:
     postgres:
       condition: service_healthy

volumes:
 postgres_data:
 superset_home:

networks:
 default:
   name: airflow_default

etl:
  build: .
  container_name: olist_etl
  depends_on:
    postgres:
      condition: service_healthy
  volumes:
    - ./src:/app/src
    - ./data:/app/data
  environment:
    - POSTGRES_USER=jerome_laval
    - POSTGRES_PASSWORD=Motdepasse13$
    - POSTGRES_DB=olist_dw
    - POSTGRES_HOST=postgres